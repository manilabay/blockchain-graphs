digraph G {

    # asset_A, asset_B, asset_C, asset_H, asset_I, asset_J, asset_X, asset_Y, asset_Z [shape=box];
    ledger_A, ledger_B, ledger_C, ledger_D [shape=box];

    sender -> asset_A [color="blue"];
    sender -> asset_B [color="green"];
    sender -> asset_H;
    sender -> asset_I;
    sender -> asset_J;
    sender -> liability_R;
    sender -> connector_A [headlabel="1", labelangle=60] [color="blue"];
    sender -> connector_B [headlabel="4", labelangle=50] [color="green"];

    connector_A -> ledger_A [color="blue"];
    connector_B -> ledger_B [headlabel="8", labelangle=50] [color="green"];
    connector_C -> ledger_C [headlabel="9", labelangle=50] [color="green"];
    connector_A -> connector_B;
    connector_B -> connector_C [headlabel="5", labelangle=50] [color="green"];
    connector_C -> receiver [headlabel="10", labelangle=70] [color="green"];
    connector_A -> receiver [color="blue"];

    connector_C -> connector_D;
    connector_D -> ledger_D;

    receiver -> asset_C [headlabel="11", labelangle=50] [color="green"];
    receiver -> asset_A [color="blue"];
    receiver -> asset_Y;
    receiver -> asset_X;
    receiver -> asset_Z;
    receiver -> liability_U;
    asset_A -> ledger_A [color="blue"];

    # Quoting
    connector_A -> quote [headlabel="2", labelangle=50] [color="blue"];
    quote -> sender [headlabel="3", labelangle=-50] [color="red"];

    connector_C -> quote [headlabel="6", labelangle=-60] [color="green"];
    quote -> sender [headlabel="7", labelangle=50] [color="green"];

    # Receiver reject or havent the right private key
    receiver -> connector_C [color="red"];
    connector_C -> connector_B [color="red"];
    ledger_B -> connector_B [color="red"];
    ledger_C -> connector_C [color="red"];
    connector_B -> sender [color="red"];
    sender -> asset_B [color="red"];

    sender_private_key -> sign_agreed_transaction [color="green"];
    receiver_private_key -> sign_agreed_transaction [color="green"];

    sign_agreed_transaction -> created_locked_public_box_with_both_public_keys_as_signers [color="green"];

<<<<<<< HEAD
    created_locked_public_box_with_both_public_keys_as_signers -> ledger_X [color="blue"];
    created_locked_public_box_with_both_public_keys_as_signers -> ledger_Y [color="green"];
    created_locked_public_box_with_both_public_keys_as_signers -> ledger_Z [color="green"];

    ledger_X -> sender_accept_and_open_box_with_private_key [color="blue"];
=======
    receiver_accept_and_unlock_box_with_private_key -> created_locked_public_box_with_both_public_keys_as_signers [color="green"];

    created_locked_public_box_with_both_public_keys_as_signers -> set_timeout [color="green"]
>>>>>>> 371e5b12804fbe3b56360a90a5c354210630f019

    set_timeout -> evaluate_timeout [color="green"]

    evaluate_timeout -> sender [label="timeout reached" color="red"];

    evaluate_timeout -> evaluate_timeout [label="check time" color="green"];

    evaluate_timeout -> ledger_X [color="green"];

    receiver_accept_and_open_box_with_private_key -> receiver_get_payment [color="green"];

    ledger_X -> ledger_Y [color="green"];
    ledger_Y -> sender_accept_and_open_box_with_private_key [color="green"];
    ledger_Y -> sign_agreed_transaction [color="green"];

    ledger_Y -> ledger_Z [color="green"];

    ledger_Z -> sender_accept_and_open_box_with_private_key [color="green"];
    ledger_Z -> sign_agreed_transaction [color="green"];

    receiver_get_payment -> ledger_X [color="blue"];



}
